version: '3'
services:
  backend:
    image: powerlog-backend-prod
    container_name: ${BACKEND_NAME}
    build:
      context: .
      args: [NODE_ENV=production]
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    env_file: ./.env
    volumes:
      - ./:/app
      - /app/node_modules
    depends_on: [postgres]
    command: npm run dev

  postgres:
    image: postgres:14.1-alpine
    container_name: ${PG_HOST}
    restart: always
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    env_file: ./.env
    volumes: 
      - powerlog-pg-db:/var/lib/postgresql/data
      - ./src/infrastructure/schema/init.prod.sql:/docker-entrypoint-initdb.d/create_tables.sql

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-proxy-prod
    restart: always
    environment:
      - BACKEND_NAME=${BACKEND_NAME}
      - BACKEND_PORT=${BACKEND_PORT}
    env_file: ./.env
    ports:
      - '${NGINX_PORT}:80'
    volumes:
      - ./nginx/templates/default.conf.template:/etc/nginx/templates/default.conf.template
      - ./nginx/custom_404.html:/usr/share/nginx/html/custom_404.html
    depends_on: [backend]


volumes:
  powerlog-pg-db:
    driver: local